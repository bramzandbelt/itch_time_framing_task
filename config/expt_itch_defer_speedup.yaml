###############################################################################
# 1. STUDY SETTINGS
###############################################################################

# title: string
#
# A short but non-cryptic name of the experiment.
#
title: 'Cognitive mechanisms time framing effects in intertemporal choice'

# code: string
#
# A short, usually cryptic, code for the experiment. An experiment code is
# typically required when using the ioHub DataStore. At this time, StPy does
# not us the ioHub DataStorem, hence no code is required.
#
# Here, the code is equal to the DCCN project identifier
#
code: 'pilot'

# ethics_protocol_id: string
#
# The identifier of the protocol of the ethics committee that approved the
# experiment. This ID is saved in the log files.
#
ethics_protocol_id: 'NL45659.091.14 v3.0'

# version: string
#
# The version of the experiment being run.
#
#       Each version on an experiment should have it's own experiment folder
#       that has the experiment source and configuaration.
#
#   Consider here referring to version A and B (randomization)
#
version: 'defer_speedup'

# description: string
#
# Here you can provide more information about the study.
#
description: Here goes some description

# display_experiment_dialog: boolean
#
# If True, a read-only dialog will be displayed when the experiment is run. The
# dialog shows the key-value pairs above. This allows the experimenter to check
# that they started the right file.
#
display_experiment_dialog: True

###############################################################################
# 2. SESSION SETTINGS
###############################################################################

# session_variable_order: list of strings
#
# This setting accepts a list, each element of which is a session variable key
# (either built-in or custom). The order the keys are provided in the list will
# be the order that each appears in the Session Input Dialog.
#
session_variable_order: [name, code, experimenter_id, comments, group_ix, subject_ix, session_ix]

# session_defaults: dictionary
#
# This parameter is defined as a dictionary containing the experiment session
# metadata and user defined custom parameters.
#
session_defaults:

    # name: string
    #
    # This parameter allows the entry of a short name for the session.
    #
    # Here, the name reflects the purpose of data collection, for example
    # - pilot
    # - practice (practice only session)
    # - experiment (this may contain a practice session followed by an experiment session)
    #
    name: <purpose of session (e.g. pilot, practice, experiment)>

    # code: string
    #
    # A short code for the experiment session.
    #
    # Here, the code reflects site of data collection
    #
    # - institute abbreviation
    # - computer
    # - other information (e.g. room where computer)
    #
    # For example:
    # DCCN_Lab-pre049-Cubicle1
    #
    code: <enter location>

    # experimenter_id: string
    #
    # An identifier of the experimenter running the experiment.
    #
    experimenter_id: <enter experimenter initials>

    # comments: string
    #
    # This parameter can be used to give any information the experimenter
    # thinks may be important to note about the session about to be run.
    #
    # Here, the comments contain instructions on what to double check.
    #
    comments: Make sure that you enter the correct and unique subject/session ID!

    # user_variables: dictionary
    #
    # This parameter is defined as a dictionary and contains custom session
    # data entry fields to be displayed in the Session Input Dialog. If no
    # extra session variables are needed, this section can be removed. The
    # default is no extra user defined variable.
    # To create user defines variables, add one line for each variable wanted
    # to the user_variables parameter section. The key of each line will be
    # shown and the label for the input. The value of each line specifies the
    # default value for string field, and the possible values to be shown for a  in the dialog.
    # list field, which is displayed as a dropdown list. For list fileds, the
    # first element of the list is the default.  Fields that have a boolean
    # default are displayed as a checkbox.
    #
    # Here, the dictionary as the following keys:
    # - group_ix: int
    #   The index of the group the subject belongs to.
    # - subject_ix: int
    #   The index of the subject within the group
    # - session_ix: int
    #   The index of the current session.
    # - practice: boolean
    #   Whether or not the practice blocks should be run.
    # - experiment: boolean
    #   Whether or not the experimental blocks should be run.
    #
    user_variables:

        group_ix: 0
        subject_ix: 0
        session_ix: 0
        practice: True
        ip_procedure: True
        experiment: True
        instruction: True

# display_session_dialog: boolean
#
# If True, an input dialog is shown each time the experiment starts allowing
# the experimenter to enter data for the session_default parameters and any
# user_variables defined.
#
display_session_dialog: True

###############################################################################
# 3. IOHUB SETTINGS
###############################################################################

# process_affinity: list
#
# This parameter specifies the processing units / cpu's that the PsychoPy
# Process should be allowed to run on. Not supported on OSX. An empty list
# indicates that the process should be able to run on any processing unit of
# the computer.
#
process_affinity: []                # Default

# remaining_processes_affinity: list
#
# Lists the processing units / cpu's that all other processes running on the
# computer (other than the ioHub Process) should be allowed to run on. An empty
# list indicates that the process should be able to run on any processing unit
# of the computer. Not supported on OSX.
#
remaining_processes_affinity: []    # Default

# event_buffer_length: int
#
# The maximum number of events that can be in the PsychoPy Process ioHub event
# cache. This is used when iohub.wait() is called and new events are received
# from the ioHub process.
#
event_buffer_length: 1024           # Default

# iohub: dictionary
#
# This dictionary specifies settings for the ioHub Process itself.
#
ioHub:
    # enable: boolean
    #
    # Do you want the ioHub process to run ?  True == Yes
    # False == why are you creating an ioHub configuration file then? ;)
    #
    # Currently, the task won't run if this is set to false.
    #
    enable: True                    # Default

    # process_affinity: Specifies the processing units / cpu's that the
    #       ioHub Process should be allowed to run on.
    #       An empty list indicates that the process should be able
    #       to run on any processing unit of the computer.
    #       Not supported on OSX.
    #
    process_affinity: []            # Default


    # config: The name of the ioHub config file, specifying device
    #       settings, etc
    #
    config: iohub_config.yaml       # Default



###############################################################################
# INSTRUCTION
###############################################################################

# instruction: dictionary
#
# This dictionary contains information about the instructions to be presented
# at different phases of the experiment.
#
instruction:
    # start: dictionary
    #
    # This dictionary contains information about the instruction stimuli to be
    # presented right after run_stpy.py is launched.
    #
    start:

        # type: string
        #
        # The PsychoPy stimulus class of the instruction stimulus. Currently,
        # only ImageStim is supported.
        #
        type: ImageStim

        # name: identifier of the set of instructions
        #
        # Currently, this key-value pair is not used by the code.
        #
        name: generalInstruction

        # content: list
        #
        # This list specifies the instruction stimuli files and the order in
        # which they are shown. The response keys are used to move from one
        # stimulus to the next.
        #
        content:
        - instruction_screens/instruction_screens_intertemporal_choice_task/instruction_screens_intertemporal_choice_task.001.jpeg
        - instruction_screens/instruction_screens_intertemporal_choice_task/instruction_screens_intertemporal_choice_task.002.jpeg
        - instruction_screens/instruction_screens_intertemporal_choice_task/instruction_screens_intertemporal_choice_task.004.jpeg

        # ori: int
        #
        # The orientation of the stimulus (in degrees).
        #
        ori: 0

        # pos: int
        #
        # The position of the center of the stimulus in the stimulus. The value
        # should be an x,y-pair.
        #
        pos: [0,0]

    # practice: dictionary
    #
    # This dictionary contains information about the instruction stimuli to be
    # presented during the practice phase of the experiment.
    #
    practice:

        # type: string
        #
        # The PsychoPy stimulus class of the instruction stimulus. Currently,
        # only ImageStim is supported.
        #
        type: ImageStim

        # name: identifier of the set of instructions
        #
        # Currently, this key-value pair is not used by the code.
        #
        name: practiceInstruction

        # content: list
        #
        # This list specifies the instruction stimuli files and the order in
        # which they are shown. The response keys are used to move from one
        # stimulus to the next.
        #
        content:
        - instruction_screens/instruction_screens_intertemporal_choice_task/instruction_screens_intertemporal_choice_task.005.jpeg
        - instruction_screens/instruction_screens_intertemporal_choice_task/instruction_screens_intertemporal_choice_task.006.jpeg

        # ori: int
        #
        # The orientation of the stimulus (in degrees).
        #
        ori: 0

        # pos: int
        #
        # The position of the center of the stimulus in the stimulus. The value
        # should be an x,y-pair.
        #
        pos: [0,0]

    # experiment: dictionary
    #
    # This dictionary contains information about the instruction stimuli to be
    # presented before the experiment begins.
    #

    ip_procedure:

        # type: string
        #
        # The PsychoPy stimulus class of the instruction stimulus. Currently,
        # only ImageStim is supported.
        #
        type: ImageStim

        # name: identifier of the set of instructions
        #
        # Currently, this key-value pair is not used by the code.
        #
        name: ipProcedureInstruction

        # content: list
        #
        # This list specifies the instruction stimuli files and the order in
        # which they are shown. The response keys are used to move from one
        # stimulus to the next.
        #
        content:
        - instruction_screens/instruction_screens_intertemporal_choice_task/instruction_screens_intertemporal_choice_task.008.jpeg
        - instruction_screens/instruction_screens_intertemporal_choice_task/instruction_screens_intertemporal_choice_task.010.jpeg
        - instruction_screens/instruction_screens_intertemporal_choice_task/instruction_screens_intertemporal_choice_task.012.jpeg

        # ori: int
        #
        # The orientation of the stimulus (in degrees).
        #
        ori: 0

        # pos: int
        #
        # The position of the center of the stimulus in the stimulus. The value
        # should be an x,y-pair.
        #
        pos: [0,0]

    experiment:

        # type: string
        #
        # The PsychoPy stimulus class of the instruction stimulus. Currently,
        # only ImageStim is supported.
        #
        type: ImageStim

        # name: identifier of the set of instructions
        #
        # Currently, this key-value pair is not used by the code.
        #
        name: experimentInstruction

        # content: list
        #
        # This list specifies the instruction stimuli files and the order in
        # which they are shown. The response keys are used to move from one
        # stimulus to the next.
        #
        content:
        - instruction_screens/instruction_screens_intertemporal_choice_task/instruction_screens_intertemporal_choice_task.014.jpeg
        - instruction_screens/instruction_screens_intertemporal_choice_task/instruction_screens_intertemporal_choice_task.017.jpeg
        - instruction_screens/instruction_screens_intertemporal_choice_task/instruction_screens_intertemporal_choice_task.018.jpeg
        - instruction_screens/instruction_screens_intertemporal_choice_task/instruction_screens_intertemporal_choice_task.019.jpeg
        - instruction_screens/instruction_screens_intertemporal_choice_task/instruction_screens_intertemporal_choice_task.021.jpeg

        # ori: int
        #
        # The orientation of the stimulus (in degrees).
        #
        ori: 0

        # pos: int
        #
        # The position of the center of the stimulus in the stimulus. The value
        # should be an x,y-pair.
        #
        pos: [0,0]

    # blockrepeat: dictionary
    #
    # This dictionary contains information about the instruction stimuli to be
    # presented when the subject does not meet task performance requirements
    # (see below) and a block has to be repeated.
    #

    break:

        # type: string
        #
        # The PsychoPy stimulus class of the instruction stimulus. Currently,
        # only ImageStim is supported.
        #
        type: ImageStim

        # name: identifier of the set of instructions
        #
        # Currently, this key-value pair is not used by the code.
        #
        name: breakInstruction

        # content: list
        #
        # This list specifies the instruction stimuli files and the order in
        # which they are shown. The response keys are used to move from one
        # stimulus to the next.
        #
        content:
        - instruction_screens/instruction_screens_intertemporal_choice_task/instruction_screens_intertemporal_choice_task.024.jpeg

        # ori: int
        #
        # The orientation of the stimulus (in degrees).
        #
        ori: 0

        # pos: int
        #
        # The position of the center of the stimulus in the stimulus. The value
        # should be an x,y-pair.
        #
        pos: [0,0]

    # blockrepeat: dictionary
    #
    # This dictionary contains information about the instruction stimuli to be
    # presented when the subject does not meet task performance requirements
    # (see below) and a block has to be repeated.
    #

    block_repeat:

        # type: string
        #
        # The PsychoPy stimulus class of the instruction stimulus. Currently,
        # only ImageStim is supported.
        #
        type: ImageStim

        # name: identifier of the set of instructions
        #
        # Currently, this key-value pair is not used by the code.
        #
        name: blockRepeat

        # content: list
        #
        # For blockrepeat, the content list must contain two files:
        # - the first file the instruction screen that tells the subject that
        #   the block will be repeated.
        # - the second file should be the instruction screen that tells the
        #   subject that the experiment will be terminated because performance
        #   fails criteria.
        content:
            - instruction_screens/instruction_screens_intertemporal_choice_task/instruction_screens_intertemporal_choice_task.022.jpeg
            - instruction_screens/instruction_screens_intertemporal_choice_task/instruction_screens_intertemporal_choice_task.023.jpeg

        # ori: int
        #
        # The orientation of the stimulus (in degrees).
        #
        ori: 0

        # pos: int
        #
        # The position of the center of the stimulus in the stimulus. The value
        # should be an x,y-pair.
        #
        pos: [0,0]

    # end: dictionary
    #
    # This dictionary contains information about the instruction stimuli to be
    # presented when the experiment is finished.
    #
    end:
        # type: string
        #
        # The PsychoPy stimulus class of the instruction stimulus. Currently,
        # only ImageStim is supported.
        #
        type: ImageStim

        # name: identifier of the set of instructions
        #
        # Currently, this key-value pair is not used by the code.
        #
        name: thankYouMessage

        # content: list
        #
        # This list specifies the instruction stimuli and the order in which
        # they are shown. The response keys are used to move from one stimulus
        # to the next.
        #
        content:
        - instruction_screens/instruction_screens_intertemporal_choice_task/instruction_screens_intertemporal_choice_task.025.jpeg

        # ori: int
        #
        # The orientation of the stimulus (in degrees).
        #
        ori: 0

        # pos: int
        #
        # The position of the center of the stimulus in the stimulus. The value
        # should be an x,y-pair.
        #
        pos: [0,0]

###############################################################################
# STIMULUS CONFIGURATION
###############################################################################

# stim_config: dictionary
#
# This dictionary specifies the configuration of the stimuli in the experiment.
# The following types of stimuli can be specified:
# - choice_instr: trial choice instruction
# - ss_opt:       small-but-soon option
# - ll_opt:       large-but-later option
# - feedback:   trial feedback stimulus
# - iti:        stimulus displayed during the intertrial interval
#
stim_config:

    # trial_instruction: dictionary
    #
    # This dictionary specifies the configuration of the choice instruction.
    # Information on stimulus onset and duration are specified in a comma-
    # separated value (csv) file, see below.
    #
    choice_instr:

        # type: string
        #
        # The PsychoPy stimulus class of the instruction stimulus. Currently,
        # only TextStim and ImageStim is supported.
        #
        type: TextStim

        # name: identifier of the stimulus
        #
        # This key-value pair is not used by the code.
        #
        name: choice_instr

        # content: list
        #
        # This list of strings contains the stimuli (if type equals TextStim)
        # or filenames of the stimuli (if type equals ImageStim).
        #
        # TODO: Adjust this sentence:
        # The indices in the cueIx column of the trialList files correspond to the indices
        # of the content list.
        #
        # N.B. Unicode characters can be used as TextStim stimuli, but they
        # should be between double-quotes (e.g. ["\u2666","\u2665"]).
        #

        color: [255, 255, 255]
        opacity: 1
        font: Helvetica
        height: 1
        ori: 0
        pos: [0, 4]

    # ss: dictionary
    #
    # This dictionary specifies the configuration of the small-but-soon option.
    # Information on stimulus onset and duration are specified in a comma-
    # separated value (csv) file, see below.
    ss_opt:

        # type: string
        #
        # The PsychoPy stimulus class of the instruction stimulus. Currently,
        # only TextStim and ImageStim is supported.
        #
        type: TextStim

        # name: list
        #
        # This list of strings is used to provide feedback on performance at
        # the end of the block. The length of the list should correspond to the
        # length of the list for the content parameter.
        #
        name: ss_opt

        # content: list
        #
        # This list of strings contains the stimuli (if type equals TextStim)
        # or filenames of the stimuli (if type equals ImageStim). The indices
        # in the cueIx column of the trialList files correspond to the indices
        # of the content list.
        # N.B. Unicode characters can be used as TextStim stimuli, but they
        # should be between double-quotes (e.g. ["\u2666","\u2665"]).
        #
        font: Helvetica
        color: [255,255,255]
        opacity: 1
        height: 1
        ori: 0
        pos: [-6,0]

    # ll: dictionary
    #
    # This dictionary specifies the configuration of the secondary stimulus
    # (signal). Information on stimulus onset and duration are specified in a
    # comma-separated value (csv) file, see below.
    #
    ll_opt:

        # type: string
        #
        # The PsychoPy stimulus class of the instruction stimulus. Currently,
        # only TextStim and ImageStim is supported.
        #
        type: TextStim
        name: ll_opt

        # content: list
        #
        # This list of strings contains the stimuli (if type equals TextStim)
        # or filenames of the stimuli (if type equals ImageStim). The indices
        # in the cueIx column of the trialList files correspond to the indices
        # of the content list.
        # N.B. Unicode characters can be used as TextStim stimuli, but they
        # should be between double-quotes (e.g. ["\u2666","\u2665"]).
        #
        color: [255, 255, 255]
        opacity: 1
        font: Helvetica
        height: 1
        ori: 0
        pos: [6,0]

    # feedback: dictionary
    #
    # This dictionary specifies the configuration of the feedback stimulus
    # (signal). Information on stimulus onset and duration are specified in a
    # below. Stimulus content is currently determined through a comma-separated
    # value (csv) file, see below.
    #

    ss_rect:
        # type: string
        #
        # The PsychoPy stimulus class of the instruction stimulus. Currently,
        # only TextStim, Rect, and ImageStim is supported.
        #
        type: Rect
        name: ss_rect

        # content: list
        #
        # This list of strings contains the stimuli (if type equals TextStim)
        # or filenames of the stimuli (if type equals ImageStim). The indices
        # in the cueIx column of the trialList files correspond to the indices
        # of the content list.
        # N.B. Unicode characters can be used as TextStim stimuli, but they
        # should be between double-quotes (e.g. ["\u2666","\u2665"]).
        #
        fill_color: [128, 128, 128]
        line_color: [255, 255, 0]
        line_width: 2
        opacity: 1
        width: 8
        height: 4
        ori: 0
        pos: [-6,0]

    ll_rect:
        # type: string
        #
        # The PsychoPy stimulus class of the instruction stimulus. Currently,
        # only TextStim, Rect, and ImageStim is supported.
        #
        type: Rect
        name: ll_rect

        # content: list
        #
        # This list of strings contains the stimuli (if type equals TextStim)
        # or filenames of the stimuli (if type equals ImageStim). The indices
        # in the cueIx column of the trialList files correspond to the indices
        # of the content list.
        # N.B. Unicode characters can be used as TextStim stimuli, but they
        # should be between double-quotes (e.g. ["\u2666","\u2665"]).
        #
        fill_color: [128, 128, 128]
        line_color: [255, 255, 0]
        line_width: 2
        opacity: 1
        width: 8
        height: 4
        ori: 0
        pos: [6,0]

    feedback:

        # type: string
        #
        # The PsychoPy stimulus class of the instruction stimulus. Currently,
        # only TextStim and ImageStim is supported.
        #
        type: TextStim

        # name: identifier of the stimulus
        #
        # This key-value pair is not used by the code.
        #
        name: feedback

        color: [255,255,0]
        opacity: 1
        font: Helvetica
        height: 1
        ori: 0
        pos: [0,2.5]

    # iti: dictionary
    #
    # This dictionary specifies the configuration of the intertrial stimulus.
    # Information on stimulus onset and duration are specified through a comma-
    # separated value (csv) file, see below.
    #
    iti:

        # type: string
        #
        # The PsychoPy stimulus class of the instruction stimulus. Currently,
        # only TextStim and ImageStim is supported.
        #
        type: TextStim

        # name: identifier of the stimulus
        #
        # This key-value pair is not used by the code.
        #

        name: iti
        color: [255,255,255]
        opacity: 1
        font: Helvetica
        height: 1
        ori: 0
        pos: [0,0]

###############################################################################
# RESPONSES
###############################################################################

# Response key settings
#

responses:

    # response_keys_per_class: dictionary
    #
    # This dictionary contains key codes of the buttons, separately for each
    # response device.
    #
    #

#    The keys with which the subjects responds, separately for each response
    # device class.
    #
    # The first corresponds to the left-side option, the second to the
    # right-side option.
    #

    response_keys_per_class:
        Keyboard: [f, j, return]
        Serial:   [f,b]
        fORP:     [f,b]
    # abort_keys: list
    #
    # They keys with which the experiment can be interrupted and terminated. These
    #                 interrupted.
    abort_keys: [escape,q]

    # trigger_keys: list
    #
    # They keys with which the experiment can started.
    trigger_keys: [s]

    # toggle_keys
    #
    # Keyboard keys to move backward and forward between instruction screens.
    # This is useful if the participant accidently pressed a button, or when
    # the partipant forgets to press a button.
    #
    toggle_keys: [left,right]
    # pause_keys:
    # The keyboard keys with which the experiment can be paused temporarily.
    #
    # This functionality is not yet implemented
    pause_keys: [p]

###############################################################################
# RANDOMIZATION
###############################################################################

randomize:
    practice:
        blocks: False
        trials: False
    experiment:
        blocks: False
        trials: False

###############################################################################
# PRACTICE
###############################################################################

practice:
    # trial_list_file
    #
    # Path to the .csv-file containing the trial list for the practice blocks
    # Monetary amount of SS option
    m_s: [5, 10, 15, 20, 25, 30, 35, 40, 45, 50]
    # Monetary amount of LL option
    m_l: 50
    # Money units
    m_unit: "€"
    # Temporal delay to SS option
    t_s: 0
    # Temporal delay to LL option
    t_l: 16
    # Temporal delay units
    t_unit: "days"
    # Interval between instruction stimulus and SS & LL option stimuli, in seconds
    isi_dur: 0
    # Minimum response time, in seconds
    min_rt: 1.5
    # Maximum response time, in seconds
    max_rt: 1000
    # If False: trial duration is fixed isi_dur + max_rt + min_feedback_dur
    # (see below) + iti_dur;
    # If True: trials are self-paced (but RT has to be greater than min_rt);
    self_paced: True
    # Intertrial interval duration, in seconds (minimum of 1-2 screen refresh
    # times)
    iti_dur: 0.2

###############################################################################
# INDIFFERENCE POINT PROCEDURE
###############################################################################
# Note that the monetary amount of the LL option (m_l) is computed from
# step_size and n_staircase_trial as m_l = 2 ** (n_staircase_trial) *
# step_size. This ensures that proper experimental values for m_s can be
# computed below,  around, and above the indifference point

ip_procedure:
    # Monetary amount of SS option
    m_s: 0
    # Money units
    m_unit: "€"
    # Temporal delay to SS option
    t_s: 0
    # Temporal delay to LL option
    t_l: [2, 4, 8, 16, 32, 64, 128]
    # Temporal delay units
    t_unit: "days"
    # Number of staircase trials
    n_staircase_trial : 7
    # Number of catch trials (per delay) on which people should choose SS
    n_catch_trial_ss: 1
    # Number of catch trials (per delay) on which people should choose LL
    n_catch_trial_ll: 1
    # Number instruction manipulation check trials (per delay)
    n_instr_manip_check_trial: 1
    # Interval between instruction stimulus and SS & LL option stimuli, in seconds
    isi_dur: 0 # 0.5
    # Minimum response time, in seconds
    min_rt: 1.5
    # Maximum response time, in seconds
    max_rt: 1000
    # If False: trial duration is fixed isi_dur + max_rt + min_feedback_dur
    # (see below) + iti_dur;
    # If True: trials are self-paced (but RT has to be greater than min_rt);
    self_paced: True
    # Intertrial interval duration, in seconds (minimum of 1-2 screen refresh
    # times)
    iti_dur: 0.2 # 1
    step_size: 0.34

###############################################################################
# EXPERIMENT
###############################################################################

experiment:
    # Number of catch trials (for the entire experiment) on which people should
    # choose SS
    n_catch_trial_ss: 9
    # Number of catch trials (for the entire experiment) on which people should choose LL
    n_catch_trial_ll: 9
    # Number instruction manipulation check trials (for the entire experiment)
    n_instr_manip_check_trial: 6
    # Interval between instruction stimulus and SS & LL option stimuli, in seconds
    isi_dur: 1.2
    # Minimum response time, in seconds
    min_rt: 1.5
    # Maximum response time, in seconds
    max_rt: 10
    # If False: trial duration is fixed isi_dur + max_rt + min_feedback_dur
    # (see below) + iti_dur;
    # If True: trials are self-paced (but RT has to be greater than min_rt);
    self_paced: True
    # Intertrial interval duration, in seconds (minimum of 1-2 screen refresh
    # times)
    iti_dur: 0.2
    time_frames: ['neutral', 'defer', 'speedup']
    n_reps: 4


###############################################################################
# STATISTICS
###############################################################################
# Details which statistics need to be computed
#
#

statistics:
    trial:
        # rt      Response time - interval between s1 onset and response
        rt: True
    block:
    practice_block:

###############################################################################
# EVALUATION
###############################################################################

# Details how trials (and blocks?) are evaluated
#
# Trials:
# - choice:       correct, error, omission
# - inhibition:   correct, error
# - RT:           correct, too slow, too fast
#
# Block:
# -
#
# practiceBlock:
# Bounds
# - choice accuracy: [0.9, 1.0]
# - median RT (s): [0, 0.80]
# - absolute RT difference: [0,50]

evaluation:
    trial:
        eval_data_file:
            Keyboard: data/experiment/csvfiles/trial_eval_data_keyboard.csv
            Serial: data/3017031-05-Expt01/csvfiles/trialEvalData_Serial.csv
    block:

###############################################################################
# FEEDBACK
###############################################################################

feedback:
    trial:
        # duration: float
        #
        # Minimum duration trial feedback is shown onscreen, in seconds
        min_duration: 1
    block:
        #
        #
        # Duration can contain be a value or two-item list
        # - if one value: then duration of feedback is fixed, and the experiment continues when this duration is over
        # - if two values, then duration of feedback is in between min (1st element) and max (2nd element) and experiment continues when subject presses a button or maximum duration has passed
        #
        #
        features:
            catch_ss_accuracy:
                enable: True
                criterion: [75,100]
                feedbackPos: 'Criterion met: Well done!'
                feedbackNeg: 'Remember: consider both options carefully'
            catch_ll_accuracy:
                enable: True
                criterion: [75,100]
                feedbackPos: 'Criterion met: Well done!'
                feedbackNeg: 'Remember: consider both options carefully'
            check_instr_accuracy:
                enable: True
                criterion: [75,100]
                feedbackPos: 'Criterion met: Well done!'
                feedbackNeg: "Remember: read each scenario's instruction"
            too_fast_responses:
                enable: True
                criterion: [0, 25]
                feedbackPos: 'Criterion met: Well done!'
                feedbackNeg: "Remember: read each scenario carefully"
            monotonicity:
                enable: True
                criterion: 20 # IPs cannot greater than the previous by this
                               # fraction of the LL amount - Johnson &
                               # Bickel (2008) proposed a value of 0.2
                feedbackPos: 'Criterion met: Well done!'
                feedbackNeg: "Remember: pay attention to each option's delay"
            discounting:
                enable: True
                criterion: [0, 97] # The IP for the longest delay should be
                               # in between these percentages of the LL amount
                               # Johnson & Bickel (2008) proposed a value of
                               # [0 90]
                feedbackPos: 'Criterion met: Well done!'
                feedbackNeg: "Remember: pay attention to each option's delay"



###############################################################################
# PERFORMANCE REQUIREMENTS
###############################################################################

# performance_requirements: dict
#
# This dictionary specifies
#
# It contains two keys:
# experiment    -
# practice      -
#
# force_repeat: boolean
# True    -
# False   -

# max_n_iter: int
# Maximum number of times a block is repeated before the experiment terminates. This only has effect if forceRepeat is set to True.
performance_requirements:
    practice:
        force_repeat: False
        max_n_iter: None
    ip_procedure:
        force_repeat: True
        max_n_iter: 3
    experiment:
        force_repeat: False
        max_n_iter: None


###############################################################################
# LOG
###############################################################################
# log: dict
#
# This dictionary specifies all aspects that need to be logged when the task is
# run.
log:

    # dir: string
    #
    # This parameter contains the directory where the experimental log files
    # will be written (task performance, runtime performance).
    # If nothing specified, the log files will be written in a directory
    #
    #
    dir: ./log/

    # runtime: dict
    #
    # Dictionary specifying whether runtime configuration should be written to
    # disk.
    runtime:

        # enable: boolean
        #
        # True    - this will check your configuration at runtime (using
        # psychopy.info.RunTimeInfo) and write the output to a txt file in the log
        # directory
        # False   - do not perform configuration check
        enable: True

    # performance: dict
    #
    # Dictionary specifying what aspects of task performance should be written
    # to disk.
    performance:

        # trial: dict
        #
        # Dictionary specifying whether trial level task performance should be
        # written to disk.
        trial:

            # enable: boolean
            # True    - write trial level task performance a .txt file in the
            #           log directory.
            # False   - do not write trial level task performance to disk
            enable: True

        # block: dict
        #
        # Dictionary specifying whether block level task performance should be
        # written to disk.
        block:

            # enable: boolean
            # True    - write block level task performance a .txt file in the
            #           log directory.
            # False   - do not write block level task performance to disk
            enable: True